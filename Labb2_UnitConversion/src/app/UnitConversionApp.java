/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

public class UnitConversion extends javax.swing.JFrame {

    /**
     * Creates new form UnitConversion
     */
    public UnitConversion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content     of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jConvType = new javax.swing.JComboBox<>();
        jConvFrom = new javax.swing.JComboBox<>();
        jValue = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jOutput = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jConvTo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Simple Unit Conversion");

        jConvType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "What do you want to convert?", "Temperature", "Length", "Weight" }));
        jConvType.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jConvTypePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        jConvType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jConvTypeActionPerformed(evt);
            }
        });

        jConvFrom.setEnabled(false);
        jConvFrom.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jConvFromPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel2.setText("Value");

        jLabel3.setText("Output");

        jOutput.setEditable(false);

        jButton1.setText("Convert");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jConvTo.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jValue, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(jButton1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                                .addComponent(jConvFrom, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jConvTo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jConvType, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jConvType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jConvFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jConvTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>                        

    private void jConvTypePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {                                                       
        if(jConvType.getSelectedItem().equals("Temperature")){
            jConvFrom.setEnabled(true);
            jConvFrom.removeAllItems();
            jConvFrom.addItem("Convert from");
            jConvFrom.addItem("fahrenheit");
            jConvFrom.addItem("kelvin");
            jConvFrom.addItem("celcius");
        }
        else if(jConvType.getSelectedItem().equals("Length")){
            jConvFrom.setEnabled(true);
            jConvFrom.removeAllItems();
            jConvFrom.addItem("Convert from");
            jConvFrom.addItem("inch");
            jConvFrom.addItem("foot");
            jConvFrom.addItem("meter");
        }
        else if(jConvType.getSelectedItem().equals("Weight")){
            jConvFrom.setEnabled(true);
            jConvFrom.removeAllItems();
            jConvFrom.addItem("Convert from");
            jConvFrom.addItem("ounce");
            jConvFrom.addItem("kilogram");
            jConvFrom.addItem("pound");
        }
        //jConvFrom.setEnabled(true);
    }                                                      

    private void jConvFromPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {                                                       
        if(jConvFrom.getSelectedItem().equals("fahrenheit")){
            jConvTo.setEnabled(true);
            jConvTo.removeAllItems();
            jConvTo.addItem("Convert to");
            jConvTo.addItem("celcius");
            jConvTo.addItem("kelvin");
        }
        else if(jConvFrom.getSelectedItem().equals("celcius")){
            jConvTo.setEnabled(true);
            jConvTo.removeAllItems();
            jConvTo.addItem("Convert to");
            jConvTo.addItem("fahrenheit");
            jConvTo.addItem("kelvin");
        }
        else if(jConvFrom.getSelectedItem().equals("kelvin")){
            jConvTo.setEnabled(true);
            jConvTo.removeAllItems();
            jConvTo.addItem("Convert to");
            jConvTo.addItem("celcius");
            jConvTo.addItem("fahrenheit");
        }
        else if(jConvFrom.getSelectedItem().equals("inch")){
            jConvTo.setEnabled(true);
            jConvTo.removeAllItems();
            jConvTo.addItem("Convert to");
            jConvTo.addItem("foot");
            jConvTo.addItem("meter");
        }
        else if(jConvFrom.getSelectedItem().equals("foot")){
            jConvTo.setEnabled(true);
            jConvTo.removeAllItems();
            jConvTo.addItem("Convert to");
            jConvTo.addItem("inch");
            jConvTo.addItem("meter");
        }
        else if(jConvFrom.getSelectedItem().equals("meter")){
            jConvTo.setEnabled(true);
            jConvTo.removeAllItems();
            jConvTo.addItem("Convert to");
            jConvTo.addItem("inch");
            jConvTo.addItem("foot");
        }
        else if(jConvFrom.getSelectedItem().equals("ounce")){
            jConvTo.setEnabled(true);
            jConvTo.removeAllItems();
            jConvTo.addItem("Convert to");
            jConvTo.addItem("kilogram");
            jConvTo.addItem("pound");
        }
        else if(jConvFrom.getSelectedItem().equals("kilogram")){
            jConvTo.setEnabled(true);
            jConvTo.removeAllItems();
            jConvTo.addItem("Convert to");
            jConvTo.addItem("ounce");
            jConvTo.addItem("pound");
        }
        else if(jConvFrom.getSelectedItem().equals("pound")){
            jConvTo.setEnabled(true);
            jConvTo.removeAllItems();
            jConvTo.addItem("Convert to");
            jConvTo.addItem("ounce");
            jConvTo.addItem("kilogram");
        }
        //jConvTo.setEnabled(true);
    }                                                      

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
    if(jConvFrom.getSelectedItem().equals("celcius") && jConvTo.getSelectedItem().equals("fahrenheit") ){
            double value = ((Double.parseDouble(jValue.getText()) *9)/5)+32; 
            jOutput.setText(String.format("%.2f%n",value));
        }
    else if(jConvFrom.getSelectedItem().equals("celcius") && jConvTo.getSelectedItem().equals("kelvin") ){
            double value = (Double.parseDouble(jValue.getText())) + 273.15; 
            jOutput.setText(String.format("%.2f%n",value));
        }
    else if(jConvFrom.getSelectedItem().equals("fahrenheit") && jConvTo.getSelectedItem().equals("kelvin") ){
            double value = (Double.parseDouble(jValue.getText()) - 32) * 5/9 + 273.15;
            jOutput.setText(String.format("%.2f%n",value));
        }
    else if(jConvFrom.getSelectedItem().equals("fahrenheit") && jConvTo.getSelectedItem().equals("celcius") ){
            double value = (Double.parseDouble(jValue.getText()) - 32) * 5/9;
            jOutput.setText(String.format("%.2f%n",value));
        }
    else if(jConvFrom.getSelectedItem().equals("kelvin") && jConvTo.getSelectedItem().equals("celcius") ){
            double value = Double.parseDouble(jValue.getText())- 273.15;
            jOutput.setText(String.format("%.2f%n",value));
        }
    else if(jConvFrom.getSelectedItem().equals("kelvin") && jConvTo.getSelectedItem().equals("fahrenheit") ){
            double value = (Double.parseDouble(jValue.getText()) - 273.15) * 9/5 + 32;
            jOutput.setText(String.format("%.2f%n",value));
        }
    else if(jConvFrom.getSelectedItem().equals("inch") && jConvTo.getSelectedItem().equals("foot") ){
            double value = Double.parseDouble(jValue.getText()) * 0.0833333;
            jOutput.setText(String.format("%.2f%n",value));
        }
    else if(jConvFrom.getSelectedItem().equals("inch") && jConvTo.getSelectedItem().equals("meter") ){
            double value = Double.parseDouble(jValue.getText()) * 0.0254;
            jOutput.setText(String.format("%.2f%n",value));
        }
    else if(jConvFrom.getSelectedItem().equals("foot") && jConvTo.getSelectedItem().equals("inch") ){
            double value = Double.parseDouble(jValue.getText()) * 12;
            jOutput.setText(String.format("%.2f%n",value));
        }
    else if(jConvFrom.getSelectedItem().equals("foot") && jConvTo.getSelectedItem().equals("meter") ){
            double value = Double.parseDouble(jValue.getText()) * 0.3048;
            jOutput.setText(String.format("%.2f%n",value));
        }
    else if(jConvFrom.getSelectedItem().equals("meter") && jConvTo.getSelectedItem().equals("inch") ){
            double value = Double.parseDouble(jValue.getText()) * 39.3701;
            jOutput.setText(String.format("%.2f%n",value));
        }
    else if(jConvFrom.getSelectedItem().equals("meter") && jConvTo.getSelectedItem().equals("foot") ){
            double value = Double.parseDouble(jValue.getText()) * 3.28084;
            jOutput.setText(String.format("%.2f%n",value));
        }
    else if(jConvFrom.getSelectedItem().equals("ounce") && jConvTo.getSelectedItem().equals("kilogram") ){
            double value = Double.parseDouble(jValue.getText()) * 0.0283495;
            jOutput.setText(String.format("%.2f%n",value));
        }
    else if(jConvFrom.getSelectedItem().equals("ounce") && jConvTo.getSelectedItem().equals("pound") ){
            double value = Double.parseDouble(jValue.getText()) * 0.0625;
            jOutput.setText(String.format("%.2f%n",value));
        }
    else if(jConvFrom.getSelectedItem().equals("kilogram") && jConvTo.getSelectedItem().equals("ounce") ){
            double value = Double.parseDouble(jValue.getText()) * 35.274;
            jOutput.setText(String.format("%.2f%n",value));
        }
    else if(jConvFrom.getSelectedItem().equals("kilogram") && jConvTo.getSelectedItem().equals("pound") ){
            double value = Double.parseDouble(jValue.getText()) * 2.20462;
            jOutput.setText(String.format("%.2f%n",value));
        }
    else if(jConvFrom.getSelectedItem().equals("pound") && jConvTo.getSelectedItem().equals("ounce") ){
            double value = Double.parseDouble(jValue.getText()) * 16;
            jOutput.setText(String.format("%.2f%n",value));
        }
    else if(jConvFrom.getSelectedItem().equals("pound") && jConvTo.getSelectedItem().equals("kilogram") ){
            double value = Double.parseDouble(jValue.getText()) * 0.453592;
            jOutput.setText(String.format("%.2f%n",value));
        }
    }                                        

    private void jConvTypeActionPerformed(java.awt.event.ActionEvent evt) {                                          
     
    }                                         
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UnitConversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UnitConversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UnitConversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UnitConversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UnitConversion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jConvFrom;
    private javax.swing.JComboBox<String> jConvTo;
    private javax.swing.JComboBox<String> jConvType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jOutput;
    private javax.swing.JTextField jValue;
    // End of variables declaration                   
}
